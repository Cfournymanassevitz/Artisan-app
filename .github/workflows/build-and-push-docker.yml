name: Build Docker Container

on:
  push:
    branches:
      - main
      - master
jobs:
  docker:
    # Utilisation de la dernière version d'Ubuntu comme runner
    runs-on: ubuntu-latest
    steps:
      # Checkout du repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configuration de QEMU pour la compatibilité multi-architecture
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Configuration de Docker Buildx pour les builds avancés
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Connexion à Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.USER }}
          password: ${{ secrets.ACCES_TOKEN }}

      # Build et push de l'image Docker
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: . # Contexte de build (le répertoire courant)
          push: true # Pousser l'image vers Docker Hub
          tags: carolefm/back:latest # Tags de l'image
          # Vous pouvez ajouter plus de tags si nécessaire
          # tags: carolefm/back:latest,carolefm/back:${{ github.sha }}

      # Déploiement de l'application
      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key


          ssh -i private_key $SERVER_USER@$SERVER_IP << 'EOF'
            cd /path/to/deployment
            docker-compose down
            docker-compose pull
            docker-compose up -d
            exit
          EOF

          rm private_key
